@page "/finances"
@using Services
@using Models
@inject IFinanceService FinanceService
@inject IModalService Modal

<h1 class="finances">Financial State</h1>
<p class="finances">Financial History</p>
@if (IsModalClosed)
{
    <button class="btn btn-primary" @onclick="@ShowAddPopup"> Add</button>
    <br />
}
@if (finances == null)
{
    <p class="finances"><em>Loading...</em></p>
}
else
{
    <table class="table" style="color:antiquewhite">
        <thead>
            <tr>
                <th>Income</th>
                <th>Expense</th>
                <th>Date</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var finance in finances)
            {
                <tr>
                    <td>@finance.Income</td>
                    <td>@finance.Expense</td>
                    <td>@finance.Date.ToShortDateString()</td>
                    <td><button class=" btn btn-primary" @onclick="@(()=>ShowEditPopup(finance.Id))">Edit</button></td>
                    <td><button class=" btn btn-primary" @onclick="@(()=>DeleteResource(finance.Id))">Delete</button></td>

                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<Finance> finances;
    private bool IsModalClosed = true;
    protected override async Task OnInitializedAsync()
    {
        finances = await FinanceService.GetFinancialStatement();
    }
    private async Task ShowAddPopup()
    {
        if (IsModalClosed)
        {
            var modal = Modal.Show<CreateFinancePopup>("Add Finance");
            IsModalClosed = false;
            var result = await modal.Result;
            finances = await FinanceService.GetFinancialStatement();
            IsModalClosed = true;
        }
    }

    private async Task ShowEditPopup(int id)
    {

        if (IsModalClosed)
        {
            var parameters = new ModalParameters();
            parameters.Add(nameof(Finance.Id), id);

            var modal = Modal.Show<UpdateFinancePopup>("Update Finance", parameters);
            IsModalClosed = false;
            var result = await modal.Result;
            finances = await FinanceService.GetFinancialStatement();
            IsModalClosed = true;
        }
    }

    private void DeleteResource(int id)
    {
        FinanceService.DeleteFinancialStatement(id);
        finances.RemoveAll(r => r.Id == id);
    }

}


<style>
    .finances {
        color: navajowhite;
    }

    .table {
        color: floralwhite;
    }
</style>