
@page "/Register"
@using Models
@using Services
@inject IUserService AuthorizationService
<h1>Register</h1>
<EditForm Model="@registerUser" OnValidSubmit="@OnValidSubmit" class="section-1-container section-container">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label class="label-text">Username :</label>
        <div>
            <InputText @bind-Value="@registerUser.Username" class="form-control col-sm-5" />
            <ValidationMessage For="@(() => registerUser.Username)" />
        </div>
    </div>
    <div class="form-group">
        <label class="label-text">Email :</label>
        <div>
            <InputText @bind-Value="@registerUser.Email" class="form-control col-sm-5" />
            <ValidationMessage For="@(() => registerUser.Email)" />
        </div>
    </div>
    <div class="form-group">
        <label class="label-text">Password :</label>
        <div>
            <InputText type="password" @bind-Value="@registerUser.Password" class="form-control col-sm-5" />
            <ValidationMessage For="@(() => registerUser.Password)" />
        </div>
    </div>
    <button type="submit" @onclick=" () => OnFormSubmit()" class="btn btn-primary">
        Register
    </button>
</EditForm>
@if(@HasRegistered)
{
    <p style=" color:forestgreen">  Successfully registered!</p>
}
@if(@Errors.Any())
{
<ul>
    @foreach (var error in Errors)
    {
        <li style="color:red">
            @error
        </li>
    }
</ul>
}

@code {

    public RegisterModel registerUser = new RegisterModel();
    public bool HasRegistered = false;
    public List<string> Errors = new List<string>();
    public EventCallback OnValidSubmit { get; set; }

    public async void OnFormSubmit()
    {
        Errors.Clear();
        var result = await AuthorizationService.Register(registerUser);
        if(result.Count == 0)
        {
            HasRegistered = true;
        }
        else
        {
            HasRegistered = false;
            Errors = result.Values.SelectMany(e => e).ToList();

        }
        StateHasChanged();

    }

}

<style>
    h1 {
        color: navajowhite;
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 100px;
        align-self: center;
        margin-top: 0px;
    }

    .register-body {
        display: flex;
        align-content: center;
        justify-content: center;
        align-items: center;
        margin: 0px;
    }

    .label-text {
        font-size: 30px;
        color: lightgoldenrodyellow
    }

    .form-control {
        height: 40px;
        max-width: 100% !important;
        width: 300px;
        border-radius: 25px;
    }

    #register-btn {
        display: inline-block;
        border-radius: 4px;
        background-color: #f4511e;
        border: none;
        color: #FFFFFF;
        text-align: center;
        font-size: 28px;
        margin-top: 30px;
        width: 200px;
        height: 45px;
        transition: all 0.5s;
        cursor: pointer;
        margin-right: 30px;
    }
            #register-btn:hover span:after {
                opacity: 1;
                right: 0;
            }
</style>